/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { actualizarPerfil$Json } from '../fn/perfil/actualizar-perfil-json';
import { ActualizarPerfil$Json$Params } from '../fn/perfil/actualizar-perfil-json';
import { actualizarPerfil$Plain } from '../fn/perfil/actualizar-perfil-plain';
import { ActualizarPerfil$Plain$Params } from '../fn/perfil/actualizar-perfil-plain';
import { crearPerfil$Json } from '../fn/perfil/crear-perfil-json';
import { CrearPerfil$Json$Params } from '../fn/perfil/crear-perfil-json';
import { crearPerfil$Plain } from '../fn/perfil/crear-perfil-plain';
import { CrearPerfil$Plain$Params } from '../fn/perfil/crear-perfil-plain';
import { CrearPerfilDtoApiResponse } from '../models/crear-perfil-dto-api-response';
import { getAcciones$Json } from '../fn/perfil/get-acciones-json';
import { GetAcciones$Json$Params } from '../fn/perfil/get-acciones-json';
import { getAcciones$Plain } from '../fn/perfil/get-acciones-plain';
import { GetAcciones$Plain$Params } from '../fn/perfil/get-acciones-plain';
import { getAllPerfiles$Json } from '../fn/perfil/get-all-perfiles-json';
import { GetAllPerfiles$Json$Params } from '../fn/perfil/get-all-perfiles-json';
import { getAllPerfiles$Plain } from '../fn/perfil/get-all-perfiles-plain';
import { GetAllPerfiles$Plain$Params } from '../fn/perfil/get-all-perfiles-plain';
import { getPerfilAccionesByPerfil$Json } from '../fn/perfil/get-perfil-acciones-by-perfil-json';
import { GetPerfilAccionesByPerfil$Json$Params } from '../fn/perfil/get-perfil-acciones-by-perfil-json';
import { getPerfilAccionesByPerfil$Plain } from '../fn/perfil/get-perfil-acciones-by-perfil-plain';
import { GetPerfilAccionesByPerfil$Plain$Params } from '../fn/perfil/get-perfil-acciones-by-perfil-plain';
import { getPerfilByPerfil$Json } from '../fn/perfil/get-perfil-by-perfil-json';
import { GetPerfilByPerfil$Json$Params } from '../fn/perfil/get-perfil-by-perfil-json';
import { getPerfilByPerfil$Plain } from '../fn/perfil/get-perfil-by-perfil-plain';
import { GetPerfilByPerfil$Plain$Params } from '../fn/perfil/get-perfil-by-perfil-plain';
import { getPerfilEmpresas$Json } from '../fn/perfil/get-perfil-empresas-json';
import { GetPerfilEmpresas$Json$Params } from '../fn/perfil/get-perfil-empresas-json';
import { getPerfilEmpresas$Plain } from '../fn/perfil/get-perfil-empresas-plain';
import { GetPerfilEmpresas$Plain$Params } from '../fn/perfil/get-perfil-empresas-plain';
import { guardaRelacionPerfilAccion$Json } from '../fn/perfil/guarda-relacion-perfil-accion-json';
import { GuardaRelacionPerfilAccion$Json$Params } from '../fn/perfil/guarda-relacion-perfil-accion-json';
import { guardaRelacionPerfilAccion$Plain } from '../fn/perfil/guarda-relacion-perfil-accion-plain';
import { GuardaRelacionPerfilAccion$Plain$Params } from '../fn/perfil/guarda-relacion-perfil-accion-plain';
import { guardaRelacionPerfilEmpresa$Json } from '../fn/perfil/guarda-relacion-perfil-empresa-json';
import { GuardaRelacionPerfilEmpresa$Json$Params } from '../fn/perfil/guarda-relacion-perfil-empresa-json';
import { guardaRelacionPerfilEmpresa$Plain } from '../fn/perfil/guarda-relacion-perfil-empresa-plain';
import { GuardaRelacionPerfilEmpresa$Plain$Params } from '../fn/perfil/guarda-relacion-perfil-empresa-plain';
import { ListaAccionDtoListApiResponse } from '../models/lista-accion-dto-list-api-response';
import { ListaPerfilesDtoListApiResponse } from '../models/lista-perfiles-dto-list-api-response';
import { PerfilAccionDtoListApiResponse } from '../models/perfil-accion-dto-list-api-response';
import { PerfilEmpresaDtoListApiResponse } from '../models/perfil-empresa-dto-list-api-response';

@Injectable({ providedIn: 'root' })
export class PerfilService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `crearPerfil()` */
  static readonly CrearPerfilPath = '/api/Perfil/CrearPerfil';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `crearPerfil$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  crearPerfil$Plain$Response(params?: CrearPerfil$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<CrearPerfilDtoApiResponse>> {
    return crearPerfil$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `crearPerfil$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  crearPerfil$Plain(params?: CrearPerfil$Plain$Params, context?: HttpContext): Observable<CrearPerfilDtoApiResponse> {
    return this.crearPerfil$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<CrearPerfilDtoApiResponse>): CrearPerfilDtoApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `crearPerfil$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  crearPerfil$Json$Response(params?: CrearPerfil$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<CrearPerfilDtoApiResponse>> {
    return crearPerfil$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `crearPerfil$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  crearPerfil$Json(params?: CrearPerfil$Json$Params, context?: HttpContext): Observable<CrearPerfilDtoApiResponse> {
    return this.crearPerfil$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<CrearPerfilDtoApiResponse>): CrearPerfilDtoApiResponse => r.body)
    );
  }

  /** Path part for operation `actualizarPerfil()` */
  static readonly ActualizarPerfilPath = '/api/Perfil/ActualizarPerfil';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `actualizarPerfil$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  actualizarPerfil$Plain$Response(params?: ActualizarPerfil$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<CrearPerfilDtoApiResponse>> {
    return actualizarPerfil$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `actualizarPerfil$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  actualizarPerfil$Plain(params?: ActualizarPerfil$Plain$Params, context?: HttpContext): Observable<CrearPerfilDtoApiResponse> {
    return this.actualizarPerfil$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<CrearPerfilDtoApiResponse>): CrearPerfilDtoApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `actualizarPerfil$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  actualizarPerfil$Json$Response(params?: ActualizarPerfil$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<CrearPerfilDtoApiResponse>> {
    return actualizarPerfil$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `actualizarPerfil$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  actualizarPerfil$Json(params?: ActualizarPerfil$Json$Params, context?: HttpContext): Observable<CrearPerfilDtoApiResponse> {
    return this.actualizarPerfil$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<CrearPerfilDtoApiResponse>): CrearPerfilDtoApiResponse => r.body)
    );
  }

  /** Path part for operation `getPerfilByPerfil()` */
  static readonly GetPerfilByPerfilPath = '/api/Perfil/GetPerfilByPerfil';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPerfilByPerfil$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilByPerfil$Plain$Response(params?: GetPerfilByPerfil$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<CrearPerfilDtoApiResponse>> {
    return getPerfilByPerfil$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPerfilByPerfil$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilByPerfil$Plain(params?: GetPerfilByPerfil$Plain$Params, context?: HttpContext): Observable<CrearPerfilDtoApiResponse> {
    return this.getPerfilByPerfil$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<CrearPerfilDtoApiResponse>): CrearPerfilDtoApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPerfilByPerfil$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilByPerfil$Json$Response(params?: GetPerfilByPerfil$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<CrearPerfilDtoApiResponse>> {
    return getPerfilByPerfil$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPerfilByPerfil$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilByPerfil$Json(params?: GetPerfilByPerfil$Json$Params, context?: HttpContext): Observable<CrearPerfilDtoApiResponse> {
    return this.getPerfilByPerfil$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<CrearPerfilDtoApiResponse>): CrearPerfilDtoApiResponse => r.body)
    );
  }

  /** Path part for operation `getAllPerfiles()` */
  static readonly GetAllPerfilesPath = '/api/Perfil/GetAllPerfiles';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllPerfiles$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllPerfiles$Plain$Response(params?: GetAllPerfiles$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ListaPerfilesDtoListApiResponse>> {
    return getAllPerfiles$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllPerfiles$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllPerfiles$Plain(params?: GetAllPerfiles$Plain$Params, context?: HttpContext): Observable<ListaPerfilesDtoListApiResponse> {
    return this.getAllPerfiles$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<ListaPerfilesDtoListApiResponse>): ListaPerfilesDtoListApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllPerfiles$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllPerfiles$Json$Response(params?: GetAllPerfiles$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<ListaPerfilesDtoListApiResponse>> {
    return getAllPerfiles$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllPerfiles$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllPerfiles$Json(params?: GetAllPerfiles$Json$Params, context?: HttpContext): Observable<ListaPerfilesDtoListApiResponse> {
    return this.getAllPerfiles$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<ListaPerfilesDtoListApiResponse>): ListaPerfilesDtoListApiResponse => r.body)
    );
  }

  /** Path part for operation `getPerfilEmpresas()` */
  static readonly GetPerfilEmpresasPath = '/api/Perfil/GetPerfilEmpresas';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPerfilEmpresas$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilEmpresas$Plain$Response(params?: GetPerfilEmpresas$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<PerfilEmpresaDtoListApiResponse>> {
    return getPerfilEmpresas$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPerfilEmpresas$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilEmpresas$Plain(params?: GetPerfilEmpresas$Plain$Params, context?: HttpContext): Observable<PerfilEmpresaDtoListApiResponse> {
    return this.getPerfilEmpresas$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<PerfilEmpresaDtoListApiResponse>): PerfilEmpresaDtoListApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPerfilEmpresas$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilEmpresas$Json$Response(params?: GetPerfilEmpresas$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<PerfilEmpresaDtoListApiResponse>> {
    return getPerfilEmpresas$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPerfilEmpresas$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilEmpresas$Json(params?: GetPerfilEmpresas$Json$Params, context?: HttpContext): Observable<PerfilEmpresaDtoListApiResponse> {
    return this.getPerfilEmpresas$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<PerfilEmpresaDtoListApiResponse>): PerfilEmpresaDtoListApiResponse => r.body)
    );
  }

  /** Path part for operation `guardaRelacionPerfilEmpresa()` */
  static readonly GuardaRelacionPerfilEmpresaPath = '/api/Perfil/GuardaRelacionPerfilEmpresa';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `guardaRelacionPerfilEmpresa$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilEmpresa$Plain$Response(params?: GuardaRelacionPerfilEmpresa$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<boolean>> {
    return guardaRelacionPerfilEmpresa$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `guardaRelacionPerfilEmpresa$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilEmpresa$Plain(params?: GuardaRelacionPerfilEmpresa$Plain$Params, context?: HttpContext): Observable<boolean> {
    return this.guardaRelacionPerfilEmpresa$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<boolean>): boolean => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `guardaRelacionPerfilEmpresa$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilEmpresa$Json$Response(params?: GuardaRelacionPerfilEmpresa$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<boolean>> {
    return guardaRelacionPerfilEmpresa$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `guardaRelacionPerfilEmpresa$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilEmpresa$Json(params?: GuardaRelacionPerfilEmpresa$Json$Params, context?: HttpContext): Observable<boolean> {
    return this.guardaRelacionPerfilEmpresa$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<boolean>): boolean => r.body)
    );
  }

  /** Path part for operation `getAcciones()` */
  static readonly GetAccionesPath = '/api/Perfil/GetAcciones';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAcciones$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAcciones$Plain$Response(params?: GetAcciones$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ListaAccionDtoListApiResponse>> {
    return getAcciones$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAcciones$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAcciones$Plain(params?: GetAcciones$Plain$Params, context?: HttpContext): Observable<ListaAccionDtoListApiResponse> {
    return this.getAcciones$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<ListaAccionDtoListApiResponse>): ListaAccionDtoListApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAcciones$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAcciones$Json$Response(params?: GetAcciones$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<ListaAccionDtoListApiResponse>> {
    return getAcciones$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAcciones$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAcciones$Json(params?: GetAcciones$Json$Params, context?: HttpContext): Observable<ListaAccionDtoListApiResponse> {
    return this.getAcciones$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<ListaAccionDtoListApiResponse>): ListaAccionDtoListApiResponse => r.body)
    );
  }

  /** Path part for operation `getPerfilAccionesByPerfil()` */
  static readonly GetPerfilAccionesByPerfilPath = '/api/Perfil/GetPerfilAccionesByPerfil';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPerfilAccionesByPerfil$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilAccionesByPerfil$Plain$Response(params?: GetPerfilAccionesByPerfil$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<PerfilAccionDtoListApiResponse>> {
    return getPerfilAccionesByPerfil$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPerfilAccionesByPerfil$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilAccionesByPerfil$Plain(params?: GetPerfilAccionesByPerfil$Plain$Params, context?: HttpContext): Observable<PerfilAccionDtoListApiResponse> {
    return this.getPerfilAccionesByPerfil$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<PerfilAccionDtoListApiResponse>): PerfilAccionDtoListApiResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPerfilAccionesByPerfil$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilAccionesByPerfil$Json$Response(params?: GetPerfilAccionesByPerfil$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<PerfilAccionDtoListApiResponse>> {
    return getPerfilAccionesByPerfil$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPerfilAccionesByPerfil$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPerfilAccionesByPerfil$Json(params?: GetPerfilAccionesByPerfil$Json$Params, context?: HttpContext): Observable<PerfilAccionDtoListApiResponse> {
    return this.getPerfilAccionesByPerfil$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<PerfilAccionDtoListApiResponse>): PerfilAccionDtoListApiResponse => r.body)
    );
  }

  /** Path part for operation `guardaRelacionPerfilAccion()` */
  static readonly GuardaRelacionPerfilAccionPath = '/api/Perfil/GuardaRelacionPerfilAccion';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `guardaRelacionPerfilAccion$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilAccion$Plain$Response(params?: GuardaRelacionPerfilAccion$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<boolean>> {
    return guardaRelacionPerfilAccion$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `guardaRelacionPerfilAccion$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilAccion$Plain(params?: GuardaRelacionPerfilAccion$Plain$Params, context?: HttpContext): Observable<boolean> {
    return this.guardaRelacionPerfilAccion$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<boolean>): boolean => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `guardaRelacionPerfilAccion$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilAccion$Json$Response(params?: GuardaRelacionPerfilAccion$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<boolean>> {
    return guardaRelacionPerfilAccion$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `guardaRelacionPerfilAccion$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  guardaRelacionPerfilAccion$Json(params?: GuardaRelacionPerfilAccion$Json$Params, context?: HttpContext): Observable<boolean> {
    return this.guardaRelacionPerfilAccion$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<boolean>): boolean => r.body)
    );
  }

}
